name: 'Compile GAP package'
description: 'Compile the given GAP package being tested'
inputs:
  ABI:
    description: 'set to 32 to use 32bit build flags for the package'
    required: false
    default: ''
  CONFIGFLAGS:
    description: 'additional arguments to be passed to configure'
    required: false
    default: ''
#env:
#  CHERE_INVOKING: 1

runs:
  using: "composite"
  steps:
    - name: "Prepare the package"
      run: |
       set -ex

       GAPROOT=${GAP_HOME}

       # ensure coverage is turned on
       if [[ -z $NO_COVERAGE ]]; then
           export CFLAGS="$CFLAGS --coverage"
           export CXXFLAGS="$CXXFLAGS --coverage"
           export LDFLAGS="$LDFLAGS --coverage"
       fi

       # adjust build flags for 32bit builds
       if [[ "${{ inputs.ABI }}" = 32 ]]; then
           export CFLAGS="$CFLAGS -m32"
           export CXXFLAGS="$CXXFLAGS -m32"
           export LDFLAGS="$LDFLAGS -m32"
       fi

       # build this package, if necessary
       if [[ -x prerequisites.sh ]]; then
           ./prerequisites.sh $GAPROOT
       fi
       if [[ -x autogen.sh ]]; then
           ./autogen.sh
       fi
       if grep Autoconf ./configure > /dev/null
       then
           ./configure --with-gaproot=$GAPROOT ${{ inputs.CONFIGFLAGS }}
           make -j4 V=1
       elif [[ -x configure ]]; then
           ./configure ${{ inputs.CONFIGFLAGS }} $GAPROOT
           make -j4 CFLAGS="$CFLAGS" CXXFLAGS="$CXXFLAGS" LDFLAGS="$LDFLAGS"
       fi
      shell: bash
